#pragma checksum "C:\Data\CuriousDrive\GitHub Repos\Telerik\Episode 1\BookStores\Client\Pages\Authors.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d8e94a8f7029d33ae5cccb3dc27886a1239461a1"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace BookStores.Client.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Data\CuriousDrive\GitHub Repos\Telerik\Episode 1\BookStores\Client\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Data\CuriousDrive\GitHub Repos\Telerik\Episode 1\BookStores\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Data\CuriousDrive\GitHub Repos\Telerik\Episode 1\BookStores\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Data\CuriousDrive\GitHub Repos\Telerik\Episode 1\BookStores\Client\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Data\CuriousDrive\GitHub Repos\Telerik\Episode 1\BookStores\Client\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Data\CuriousDrive\GitHub Repos\Telerik\Episode 1\BookStores\Client\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Data\CuriousDrive\GitHub Repos\Telerik\Episode 1\BookStores\Client\_Imports.razor"
using BookStores.Client;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Data\CuriousDrive\GitHub Repos\Telerik\Episode 1\BookStores\Client\_Imports.razor"
using BookStores.Client.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Data\CuriousDrive\GitHub Repos\Telerik\Episode 1\BookStores\Client\_Imports.razor"
using Telerik.Blazor;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Data\CuriousDrive\GitHub Repos\Telerik\Episode 1\BookStores\Client\_Imports.razor"
using Telerik.Blazor.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Data\CuriousDrive\GitHub Repos\Telerik\Episode 1\BookStores\Client\Pages\Authors.razor"
using BookStores.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Data\CuriousDrive\GitHub Repos\Telerik\Episode 1\BookStores\Client\Pages\Authors.razor"
using BookStores.Services;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Authors : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 146 "C:\Data\CuriousDrive\GitHub Repos\Telerik\Episode 1\BookStores\Client\Pages\Authors.razor"
       

    //properties
    public Author author { get; set; }
    public List<Author> authorList { get; set; }   

    public List<BookType> BookTypes = new List<BookType>();
    public List<City> Cities { get; set; } = new List<City>();
    public List<State> States { get; set; } = new List<State>();

    public string TextBoxValue { get; set; }

    //methods

    private bool SetTextBoxAccess()
    {
        return true;
    }

    private void TextBoxEventHandler(string value)
    {
        author.FirstName = value;
        TextBoxValue = value;
    }

    protected override async Task OnInitializedAsync()
    {
        author = new Author();
        authorList = new List<Author>();
        await LoadAuthors();

        //loading dropdownlist
        LoadCities();
        LoadStates();

        LoadBookTypes();

        await base.OnInitializedAsync();
    }

    private async Task LoadAuthors()
    {
        authorList = await bookStoresService.GetAllAsync("authors/GetAuthors");

        if (authorList != null)
            authorList = authorList.OrderByDescending(auth => auth.AuthorId).ToList();

        StateHasChanged();
    }

    private void LoadCities()
    {
        Cities.Add(new City { Id = 1, CityName = "New York City" });
        Cities.Add(new City { Id = 2, CityName = "Los Angeles" });
        Cities.Add(new City { Id = 3, CityName = "Chicago" });
        Cities.Add(new City { Id = 4, CityName = "Houston" });
        Cities.Add(new City { Id = 5, CityName = "Phoenix" });
        Cities.Add(new City { Id = 6, CityName = "Philadelphia" });
        Cities.Add(new City { Id = 7, CityName = "San Antonio" });
        Cities.Add(new City { Id = 8, CityName = "San Diego" });
        Cities.Add(new City { Id = 9, CityName = "Dallas" });
        Cities.Add(new City { Id = 10, CityName = "San Jose" });
        Cities.Add(new City { Id = 11, CityName = "Austin" });
        Cities.Add(new City { Id = 12, CityName = "Jacksonville" });
        Cities.Add(new City { Id = 13, CityName = "Fort Worth" });
        Cities.Add(new City { Id = 14, CityName = "Columbus" });
        Cities.Add(new City { Id = 15, CityName = "San Francisco" });
        Cities.Add(new City { Id = 16, CityName = "Charlotte" });
        Cities.Add(new City { Id = 17, CityName = "Indianapolis" });
        Cities.Add(new City { Id = 18, CityName = "Seattle" });
        Cities.Add(new City { Id = 19, CityName = "Denver" });
    }

    private void LoadStates()
    {        
        States.Add(new State { Id = 1, StateName = "NY" });
        States.Add(new State { Id = 1, StateName = "CA" });
        States.Add(new State { Id = 1, StateName = "IL" });
        States.Add(new State { Id = 1, StateName = "AZ" });
        States.Add(new State { Id = 1, StateName = "PA" });
        States.Add(new State { Id = 1, StateName = "OH" });
        States.Add(new State { Id = 1, StateName = "NC" });
        States.Add(new State { Id = 1, StateName = "IN" });
        States.Add(new State { Id = 1, StateName = "WA" });
        States.Add(new State { Id = 1, StateName = "CO" });
        States.Add(new State { Id = 1, StateName = "TX" });
        States.Add(new State { Id = 1, StateName = "FL" });
    }

    private void LoadBookTypes()
    {
        //loading book types
        BookTypes.Add(new BookType { Id = 1, Type = "Fiction" });
        BookTypes.Add(new BookType { Id = 2, Type = "Non-Fiction" });
    }

    private async Task CreateAuthor()
    {
        if (author.AuthorId == 0)
            await bookStoresService.SaveAsync("authors/CreateAuthor", author);

        await LoadAuthors();

        author = new Author();
    }

    private async Task UpdateAuthor()
    {
        if(author.AuthorId != 0)
            await bookStoresService.UpdateAsync("authors/UpdateAuthor", author.AuthorId, author);

        await LoadAuthors();

        author = new Author();
    }

    private async Task DeleteAuthor(int authorId)
    {
        await bookStoresService.DeleteAsync("authors/DeleteAuthor/", authorId);
        await LoadAuthors();
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IJSRuntime JSRuntime { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IBookStoresService<Author> bookStoresService { get; set; }
    }
}
#pragma warning restore 1591
